"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var invariant_1 = __importDefault(require("invariant"));
var conformsTo_1 = __importDefault(require("lodash/conformsTo"));
var defaults_1 = __importDefault(require("lodash/defaults"));
var isFunction_1 = __importDefault(require("lodash/isFunction"));
var isString_1 = __importDefault(require("lodash/isString"));
var isUndefined_1 = __importDefault(require("lodash/isUndefined"));
exports.apiOptions = function (maybeOptions) {
    var shape = {
        clientId: function (token) { return isUndefined_1.default(token) || isString_1.default(token); },
        token: function (token) { return isUndefined_1.default(token) || isString_1.default(token); },
        onAuthenticationFailure: isFunction_1.default,
    };
    var options = defaults_1.default(__assign({}, maybeOptions), {
        clientId: undefined,
        token: undefined,
        onAuthenticationFailure: function () { return new Promise(function (_, reject) { return reject(); }); },
    });
    invariant_1.default(conformsTo_1.default(options, shape), '[twitch-js/Api] options: Expected valid options');
    return options;
};
//# sourceMappingURL=validators.js.map